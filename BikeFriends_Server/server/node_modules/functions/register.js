var crypto = require('crypto');
var rand = require('csprng');
var mongoDB = require('mongoskin');
var BSON = require('mongodb').BSONPure;
var db = mongoDB.db('mongodb://localhost/mydb?auto_reconnect=true', {
    safe: true
});

db.bind('profiles');

var profilesCollection = db.profiles;
 
 
exports.register = function(username, birthdate, email, password, gender, residence, callback) {
	var x = email;
	if(!(x.indexOf("@")==x.length)){
		//if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && password.length > 4 && password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {
		if (password.length > 4) {
			var temp =rand(160, 36);
			var newpass = temp + password;
			var token = crypto.createHash('sha512').update(email +rand).digest("hex");
			var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");
			var newuser = {
				username: username,
    		    email: email,
    		    birthdate: new Date(birthdate),
                gender: gender,
    		    hashed_password: hashed_password,
    		    salt :temp,
                token: token,
                residence: residence};



			profilesCollection.find({email: email}).toArray(function(error, result) {
      		  	//console.log(result);
      			if (error)
            		next(error);
            	else if(result.length > 0){
            		callback({'response':"Email already registered"});
            	}
        		else {
                    console.log("dbtest");
        			profilesCollection.insert(newuser, function(error){
        				if(error){
        					next(error);
        				}
        				else{
        					callback({response:"Sucessfully registered"});
        				}
        			});
        		}
    		});
		}else{
		    callback({'response':"Password Weak"});
		}
	}else{
	    callback({'response':"Email Not Valid"});
	}
};
